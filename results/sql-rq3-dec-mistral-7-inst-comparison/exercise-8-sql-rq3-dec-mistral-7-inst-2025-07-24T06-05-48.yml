config:
  label: mistral-7-inst
  name: mistral-7B-inst-v0.3-hf
  temperature: 0.2
  top_p: 0.9
errors:
- {}
gt_preprocessed:
  dependencies:
  - from: CHECKIN
    to: CHECKIN.checkInTime
  - from: CHECKIN
    to: CHECKIN.numberOfBags
  - from: CHECKIN
    to: TICKET.ticketNumber
  - from: CHECKIN
    to: CHECKIN.seat
  - from: CHECKIN
    to: PERSON.personCode
  - from: PERSON.personCode
    to: PERSON.name
  - from: PERSON.personCode
    to: PERSON.surname
  - from: PERSON.personCode
    to: PERSON.birthdate
  - from: PERSON.personCode
    to: PERSON.cityOfResidence
  - from: PERSON.personCode
    to: PERSON.documentId
  - from: PERSON.personCode
    to: PERSON.documentType
  - from: PERSON.personCode
    to: PERSON.telephone
  - from: PERSON.personCode
    to: PERSON.email
  - from: PERSON.personCode
    to: PERSON.gender
  - from: TICKET.ticketNumber
    to: FLIGHT.date,FLIGHT.route
  - from: CHECKIN
    to: TICKET.flightAmount
  - from: CHECKIN
    to: TICKET.taxAmount
  - from: TICKET.ticketNumber
    to: TICKET.priorityYN
  - from: TICKET.ticketNumber
    to: PURCHASE.purchaseCode
  - from: PURCHASE.purchaseCode
    to: PURCHASE.date
  - from: CHECKIN
    to: PURCHASE.totalAmount
  - from: PURCHASE.purchaseCode
    role: buyerCode
    to: PERSON.personCode
  - from: FLIGHT.date,FLIGHT.route
    to: FLIGHT.delayInDeparture
  - from: FLIGHT.date,FLIGHT.route
    to: FLIGHT.date
  - from: FLIGHT.date,FLIGHT.route
    to: FLIGHT.delayInArrival
  - from: FLIGHT.date,FLIGHT.route
    to: FLIGHT.cancelledYN
  - from: FLIGHT.date,FLIGHT.route
    to: ROUTE.route
  - from: ROUTE.route
    to: ROUTE.arrivalTime
  - from: ROUTE.route
    to: ROUTE.departureTime
  - from: ROUTE.route
    to: AIRLINE.airlineCode
  - from: ROUTE.route
    role: departure
    to: AIRPORT.airportCode
  - from: ROUTE.route
    role: arrival
    to: AIRPORT.airportCode
  - from: ROUTE.route
    to: AIRPLANETYPE.airplaneType
  - from: AIRPORT.airportCode
    to: AIRPORT.name
  - from: AIRPORT.airportCode
    to: AIRPORT.city
  - from: AIRPORT.city
    to: AIRPORT.nation
  - from: AIRLINE.airlineCode
    to: AIRLINE.airlineName
  - from: AIRLINE.airlineCode
    to: AIRLINE.nation
  - from: AIRPLANETYPE.airplaneType
    to: AIRPLANETYPE.name
  - from: CHECKIN
    to: AIRPLANETYPE.numberOfSeats
  fact:
    name: CHECKIN
  measures:
  - name: CHECKIN.numberOfBags
  - name: TICKET.flightAmount
  - name: TICKET.taxAmount
  - name: PURCHASE.totalAmount
  - name: AIRPLANETYPE.numberOfSeats
metrics:
- {}
output:
- "\n\nCREATE TABLE LOST_BAG (\nlostBagCode INT PRIMARY KEY,\nboardingCardCode INT,\n\
  foundYN CHAR(1),\nFOREIGN KEY (boardingCardCode) REFERENCES BOARDING_CARD(boardingCardCode)\n\
  );\n\nCREATE TABLE LOST_BAG_FOUND (\nlostBagCode INT,\nfoundDate DATE,\nfoundLocation\
  \ VARCHAR(100),\nFOREIGN KEY (lostBagCode) REFERENCES LOST_BAG(lostBagCode)\n);\n\
  \nAfter applying the steps, the resulting DFM schema in YAML format is:\n\nfact:\n\
  \  name: TICKET\nmeasures:\n  - name: PURCHASE.totalAmount\n  - name: TICKET.flightAmount\n\
  \  - name: TICKET.taxAmount\ndependencies:\n  - from: PERSON.personCode\n    to:\
  \ PERSON.name\n  - from: PERSON.personCode\n    to: PERSON.surname\n  - from: PERSON.personCode\n\
  \    to: PERSON.birthdate\n  - from: PERSON.personCode\n    to: PERSON.cityOfResidence\n\
  \  - from: PERSON.personCode\n    to: PERSON.documentId\n  - from: PERSON.personCode\n\
  \    to: PERSON.documentType\n  - from: PERSON.personCode\n    to: PERSON.telephone\n\
  \  - from: PERSON.personCode\n    to: PERSON.email\n  - from: PERSON.personCode\n\
  \    to: PERSON.gender\n  - from: AIRPORT.airportCode\n    to: AIRPORT.name\n  -\
  \ from: AIRPORT.airportCode\n    to: AIRPORT.city\n  - from: AIRPORT.airportCode\n\
  \    to: AIRPORT.nation\n  - from: AIRLINE.airlineCode\n    to: AIRLINE.airlineName\n\
  \  - from: AIRLINE.airlineCode\n    to: AIRLINE.nation\n  - from: AIRPLANE_TYPE.airplaneType\n\
  \    to: AIRPLANE_TYPE.name\n  - from: AIRPLANE_TYPE.airplaneType\n    to: AIRPLANE_TYPE.numberOfSeats\n\
  \  - from: ROUTE.route\n    to: AIRPORT.airportCode\n  - from: ROUTE.route\n   \
  \ to: AIRLINE.airlineCode\n  - from: ROUTE.route\n    to: AIRPLANE_TYPE.airplaneType\n\
  \  - from: FLIGHT.date, FLIGHT.route\n    to: FLIGHT.delayInDeparture\n  - from:\
  \ FLIGHT.date, FLIGHT.route\n    to: FLIGHT.delayInArrival\n  - from: FLIGHT.date,\
  \ FLIGHT.route\n    to: FLIGHT.cancelledYN\n  - from: TICKET.ticketNumber, TICKET.date,\
  \ TICKET.route\n    to: TICKET.flightAmount\n  - from: TICKET.ticketNumber, TICKET.date,\
  \ TICKET.route\n    to: TICKET.taxAmount\n  - from: TICKET.ticketNumber, TICKET.date,\
  \ TICKET.route\n    to: PURCHASE.totalAmount\n  - from: TICKET.ticketNumber\n  \
  \  to: BOARDING_CARD.ticketNumber\n  - from: TICKET.ticketNumber\n    to: CHECK_IN.boardingCardCode\n\
  \  - from: BOARDING_CARD.boardingCardCode\n    to: PERSON.personCode\n  - from:\
  \ BOARDING_CARD.boardingCardCode\n    to: BOARDING_CARD.seat\n  - from: CHECK_IN.boardingCardCode\n\
  \    to: CHECK_IN.checkInTime\n  - from: CHECK_IN.boardingCardCode\n    to: CHECK_IN.numberOfBags\n\
  \  - from: BOARDING_CARD.boardingCardCode\n    to: LOST_BAG.boardingCardCode\n \
  \ - from: LOST_BAG.lostBagCode\n    to: LOST_BAG.foundYN\n  - from: LOST_BAG.lostBagCode\n\
  \    to: LOST_BAG_FOUND.lostBagCode\n  - from: LOST_BAG_FOUND.lostBagCode\n    to:\
  \ LOST_BAG_FOUND.foundDate\n  - from: LOST_BAG_FOUND.lostBagCode\n    to: LOST_BAG_FOUND.foundLocation"
output_preprocessed: []
